{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Characters","Table","Column","HeaderCell","Cell","value","label","EskillMultis","Diluc","Chongyun","Bennet","Beidou","Fischl","Amber","Keqing","Klee","Lisa","Jean","Kaeya","Mona","Ningguang","Noelle","Qiqi","Razor","Traveler_g","Traveler_a","Venti","Sucrose","Xiangling","Xingqiu","Object","freeze","QskillMultis","Atkslider","props","React","useState","atkvalue","setatkValue","Row","Col","md","Slider","progress","min","max","style","margin","onChange","calcThis","InputNumber","App","calcAtk","atk","setState","calcCD","cd","CD","calcCR","cr","CR","calcdef","def","calcEM","em","EM","state","eSM","qSM","className","Grid","fluid","gutter","SelectPicker","preventOverflow","data","size","width","onSelect","xs","class","textAlign","this","Math","round","map","x","reduce","a","b","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fba81868.chunk.js","sourcesContent":["import React, { Component, useState } from \"react\";\nimport \"./App.css\";\n\nimport \"rsuite/dist/styles/rsuite-default.css\";\nimport {\n  Slider,\n  RangeSlider,\n  Grid,\n  Row,\n  Col,\n  Container,\n  Header,\n  Content,\n  InputNumber,\n  SelectPicker,\n  Table\n} from \"rsuite\";\nimport { objectTypeSpreadProperty } from \"@babel/types\";\nconst { Column, HeaderCell, Cell } = Table;\nconst Characters = [\n  { value: \"Diluc\", label: \"Diluc\" },\n  { value: \"Chongyun\", label: \"Chongyun\" },\n  { value: \"Bennet\", label: \"Bennet\" },\n  { value: \"Beidou\", label: \"Beidou\" },\n  { value: \"Fischl\", label: \"Fischl\" },\n  { value: \"Amber\", label: \"Amber\" },\n  { value: \"Keqing\", label: \"Keqing\" },\n  { value: \"Klee\", label: \"Klee\" },\n  { value: \"Lisa\", label: \"Lisa\" },\n  { value: \"Jean\", label: \"Jean\" },\n  { value: \"Kaeya\", label: \"Kaeya\" },\n  { value: \"Mona\", label: \"Mona\" },\n  { value: \"Ningguang\", label: \"Ninguang\" },\n  { value: \"Noelle\", label: \"Noelle\" },\n  { value: \"Qiqi\", label: \"Qiqi\" },\n  { value: \"Razor\", label: \"Razor\" },\n  { value: \"Traveler_g\", label: \"Geo MC\" },\n  { value: \"Traveler_a\", label: \"Anemo MC\" },\n  { value: \"Venti\", label: \"Venti\" },\n  { value: \"Sucrose\", label: \"Sucrose\" },\n  { value: \"Xiangling\", label: \"Xiangling\" },\n  { value: \"Xingqiu\", label: \"Xiangqiu\" }\n];\n\nconst EskillMultis = {\n  Diluc: [0.944, 0.976, 1.29],\n  Chongyun: [1.72],\n  Bennet: [1.38, 0.84 + 0.92, 0.88 + 0.96, 1.32],\n  Beidou: [1.22, 1.6],\n  Fischl: [0.888, 1.15],\n  Amber: [1.23],\n  Keqing: [0.504, 1.68, 0.84 * 2],\n  Klee: [0.95 + 0.33],\n  Lisa: [3.2],\n  Jean: [2.92],\n  Kaeya: [1.91],\n  Mona: [1.33],\n  Ningguang: [2.3],\n  Noelle: [1.2],\n  Qiqi: [0.92],\n  Razor: [1.99],\n  Traveler_g: [2.48],\n  Traveler_a: [1.92],\n  Venti: [2.76],\n  Sucrose: [2.11],\n  Xiangling: [1.11],\n  Xingqiu: [1.68 + 1.91]\n};\nObject.freeze(EskillMultis);\n\nconst QskillMultis = {\n  Diluc: [2.04, 0.6, 2.04],\n  Chongyun: [1.42],\n  Bennet: [2.33],\n  Beidou: [1.22 + 0.96],\n  Fischl: [2.08],\n  Amber: [5.05],\n  Keqing: [0.88, 0.24 * 8, 1.89],\n  Klee: [0.426],\n  Lisa: [0.366],\n  Jean: [4.25],\n  Kaeya: [0.776],\n  Mona: [4.22],\n  Ningguang: [0.87],\n  Noelle: [0.928],\n  Qiqi: [2.85],\n  Razor: [1.25],\n  Traveler_g: [1.48],\n  Traveler_a: [0.808],\n  Sucrose: [1.48 * 3],\n  Venti: [0.47 * 8],\n  Xiangling: [0.72, 0.88, 1.1, 1.12],\n  Xingqiu: [0.543]\n};\nObject.freeze(QskillMultis);\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { atk: 0, CR: 0, CD: 0, def: 0, EM: 0, eSM: [], qSM: [] };\n  }\n\n  calcAtk = atk => {\n    this.setState({ atk: atk });\n  };\n\n  calcCD = cd => {\n    this.setState({ CD: cd * 0.01 + 1 });\n  };\n\n  calcCR = cr => {\n    this.setState({ CR: cr / 100 });\n  };\n  calcdef = def => {\n    this.setState({ def: def });\n  };\n  calcEM = em => {\n    this.setState({ EM: em });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className=\"App-header\"> Genshin Damage Calculator </h1>\n        <Grid fluid>\n          <Row gutter={12}>\n            <Col md={12}>\n              {\" \"}\n              <h2>Character Stats</h2>\n            </Col>\n            <Col md={12}>\n              <h2>Select Character Skill Multipliers</h2>\n              <SelectPicker\n                preventOverflow\n                data={Characters}\n                size=\"lg\"\n                style={{ width: 224 }}\n                onSelect={(value, eSM) => {\n                  this.setState({\n                    eSM: EskillMultis[value],\n                    qSM: QskillMultis[value]\n                  });\n                }}\n              />\n              <Row>\n                <h6> *The Skill Multipliers are based on skill level 1</h6>\n                <h6> Damage Assumes all possible hits are landed</h6>\n                <h6> Damage for DOT is for max ticks (No Swirl dmg)</h6>\n              </Row>\n            </Col>\n          </Row>\n          <Row gutter={10}>\n            <Col xs={24}>\n              <div class=\"Slider\">\n                <h4 style={{ textAlign: \"left\" }}>Attack</h4>\n                <Atkslider value=\"atk\" max=\"9999\" calcThis={this.calcAtk} />\n              </div>\n            </Col>\n          </Row>\n          <Row>\n            <Col xs={24}>\n              <div class=\"Slider\">\n                <h4 style={{ textAlign: \"left\" }}>Crit Rate %</h4>\n                <Atkslider max=\"80\" calcThis={this.calcCR} />\n              </div>\n            </Col>\n          </Row>\n          <Row>\n            <Col xs={24}>\n              <div class=\"Slider\">\n                <h4 style={{ textAlign: \"left\" }}>Crit Dmg %</h4>\n                <Atkslider calcThis={this.calcCD} max=\"350\" />\n              </div>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={4}>\n              <div class=\"Slider\">\n                <h4 style={{ textAlign: \"\" }}>Defense</h4>\n                <InputNumber\n                  min={0}\n                  max={9999}\n                  value={this.state.def}\n                  onChange={def => {\n                    this.calcdef(def);\n                  }}\n                />\n              </div>\n            </Col>\n            <Col md={6}>\n              <div class=\"Slider\">\n                <h4 style={{ textAlign: \"\" }}>Elemental Mastery</h4>\n                <InputNumber\n                  min={0}\n                  max={9999}\n                  value={this.state.EM}\n                  onChange={EM => {\n                    this.calcEM(EM);\n                  }}\n                />\n              </div>\n            </Col>\n          </Row>\n\n          <Row gutter={12}>\n            {/* <Col md={8}>\n              <h3>Non-Crit Hit</h3>\n              <h4>{Math.round(this.state.atk)} </h4>\n            </Col>\n            <Col md={8}>\n              <h3>Critical Hit</h3>\n              <h4>{Math.round(this.state.atk * this.state.CD)} </h4>\n            </Col>\n            <Col md={8}>\n              <h3>Expected Damage</h3>\n              <h4>\n                {Math.round(\n                  (1 - this.state.CR) * this.state.atk +\n                    this.state.CR * (this.state.CD * this.state.atk)\n                )}\n              </h4>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={8}>\n              <h3>Total E Damage (Non Crit)</h3>\n              <h4>\n                {Math.round(\n                  this.state.eSM\n                    .map(x => x * this.state.atk)\n                    .reduce((a, b) => a + b, 0)\n                )}\n              </h4>\n            </Col>\n            <Col md={8}>\n              <h3>Total E Damage (Crit)</h3>\n              <h4>\n                {Math.round(\n                  this.state.eSM\n                    .map(x => x * this.state.atk * this.state.CD)\n                    .reduce((a, b) => a + b, 0)\n                )}\n              </h4>\n            </Col>\n            <Col md={8}>\n              <h3>Expected E Damage</h3>\n              <h4>\n                {Math.round(\n                  this.state.eSM\n                    .map(\n                      x =>\n                        x * this.state.atk * (1 - this.state.CR) +\n                        this.state.CR * this.state.CD * this.state.atk * x\n                    )\n                    .reduce((a, b) => a + b, 0)\n                )}\n              </h4>\n            </Col> */}\n            <Col xs={5}>\n              {\" \"}\n              <h4>Skill</h4>\n            </Col>\n            <Col xs={5}>\n              {\" \"}\n              <h4>Non Crit Hit</h4>\n            </Col>\n            <Col xs={5}>\n              {\" \"}\n              <h4>Crit Hit</h4>\n            </Col>\n            <Col xs={5}>\n              {\" \"}\n              <h4>Average Damage</h4>\n            </Col>\n          </Row>\n          <Row>\n            <Col xs={5}>\n              <h4>Basic Attack</h4>\n            </Col>\n            <Col xs={5}>\n              <h5>{Math.round(this.state.atk)} </h5>\n            </Col>\n            <Col xs={5}>\n              <h5>{Math.round(this.state.atk * this.state.CD)} </h5>\n            </Col>\n            <Col xs={5}>\n              <h5>\n                {Math.round(\n                  (1 - this.state.CR) * this.state.atk +\n                    this.state.CR * (this.state.CD * this.state.atk)\n                )}{\" \"}\n              </h5>\n            </Col>\n          </Row>\n          <Row>\n            <Col xs={5}>\n              <h4>Elemental Skill</h4>\n            </Col>\n            <Col xs={5}>\n              {\" \"}\n              <h5>\n                {\" \"}\n                {Math.round(\n                  this.state.eSM\n                    .map(x => x * this.state.atk)\n                    .reduce((a, b) => a + b, 0)\n                )}{\" \"}\n              </h5>\n            </Col>\n            <Col xs={5}>\n              {\" \"}\n              <h5>\n                {\" \"}\n                {Math.round(\n                  this.state.eSM\n                    .map(x => x * this.state.atk * this.state.CD)\n                    .reduce((a, b) => a + b, 0)\n                )}\n              </h5>\n            </Col>\n            <Col xs={5}>\n              {\" \"}\n              <h5>\n                {\" \"}\n                {Math.round(\n                  this.state.eSM\n                    .map(\n                      x =>\n                        x * this.state.atk * (1 - this.state.CR) +\n                        this.state.CR * this.state.CD * this.state.atk * x\n                    )\n                    .reduce((a, b) => a + b, 0)\n                )}\n              </h5>\n            </Col>\n          </Row>\n          <Row>\n            <Col xs={5}>\n              <h4>Elemental Burst</h4>\n            </Col>\n            <Col xs={5}>\n              {\" \"}\n              <h5>\n                {\" \"}\n                {Math.round(\n                  this.state.qSM\n                    .map(x => x * this.state.atk)\n                    .reduce((a, b) => a + b, 0)\n                )}{\" \"}\n              </h5>\n            </Col>\n            <Col xs={5}>\n              {\" \"}\n              <h5>\n                {\" \"}\n                {Math.round(\n                  this.state.qSM\n                    .map(x => x * this.state.atk * this.state.CD)\n                    .reduce((a, b) => a + b, 0)\n                )}\n              </h5>\n            </Col>\n            <Col xs={5}>\n              {\" \"}\n              <h5>\n                {\" \"}\n                {Math.round(\n                  this.state.qSM\n                    .map(\n                      x =>\n                        x * this.state.atk * (1 - this.state.CR) +\n                        this.state.CR * this.state.CD * this.state.atk * x\n                    )\n                    .reduce((a, b) => a + b, 0)\n                )}\n              </h5>\n            </Col>\n          </Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nfunction Atkslider(props) {\n  const [atkvalue, setatkValue] = React.useState(0);\n  return (\n    <Row>\n      <Col md={10}>\n        <Slider\n          progress\n          min={0}\n          max={props.max}\n          style={{ margin: 20 }}\n          value={atkvalue}\n          onChange={atkvalue => {\n            setatkValue(atkvalue);\n            props.calcThis(atkvalue);\n          }}\n        />\n      </Col>\n      <Col md={4}>\n        <InputNumber\n          min={0}\n          max={props.max}\n          value={atkvalue}\n          onChange={atkvalue => {\n            setatkValue(atkvalue);\n            props.calcThis(atkvalue);\n          }}\n        />\n      </Col>\n    </Row>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"rsuite/dist/styles/rsuite-default.css\";\nimport {\n  Slider,\n  RangeSlider,\n  Grid,\n  Row,\n  Col,\n  Container,\n  Header,\n  Content,\n  InputNumber\n} from \"rsuite\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// function Atkslider(props) {\n//   const [atkvalue, setatkValue] = React.useState(0);\n//   return (\n//     <Row>\n//       <Col md={10}>\n//         <Slider\n//           progress\n//           style={{ marginTop: 16 }}\n//           value={atkvalue}\n//           onChange={atkvalue => {\n//             setatkValue(atkvalue);\n//           }}\n//         />\n//       </Col>\n//       <Col md={4}>\n//         <InputNumber\n//           min={0}\n//           max={100}\n//           value={atkvalue}\n//           onChange={atkvalue => {\n//             setatkValue(atkvalue);\n//           }}\n//         />\n//       </Col>\n//     </Row>\n//   );\n// }\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}